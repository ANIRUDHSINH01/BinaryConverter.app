name: Auto Build APK for Indus

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  id-token: write

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - run: npm ci
      - run: npm install -g eas-cli
      - run: mkdir -p "${{ runner.temp }}/apk-output"

      - id: eas_build
        run: |
          set -o pipefail
          BUILD_OUTPUT=$(eas build --platform android --profile production --non-interactive --wait --output-dir "${{ runner.temp }}/apk-output" 2>&1 || true)
          BUILD_URL=$(echo "$BUILD_OUTPUT" | grep -Eo 'https://expo\.dev/accounts/[^ ]*' | head -n1 || true)
          echo "build_url=${BUILD_URL:-NOT_FOUND}" >> $GITHUB_OUTPUT

      - id: find_apk
        run: |
          set -e
          APK_PATH=$(find "${{ runner.temp }}/apk-output" -type f -name "*.apk" | head -n1 || true)
          if [[ -z "$APK_PATH" ]]; then
            exit 1
          fi
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
          echo "apk_filename=$(basename "$APK_PATH")" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: apk-artifact
          path: ${{ steps.find_apk.outputs.apk_path }}

      - id: get_tag
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
          else
            TAG="build-$(date +'%Y%m%d-%H%M%S')-${GITHUB_SHA::7}"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - id: release_notes
        run: |
          APK_FILE="${{ steps.find_apk.outputs.apk_filename }}"
          cat > release_notes.md <<EOF
## Binary Converter App APK (Indus Appstore)

### Download
The APK file (**${APK_FILE}**) is attached below.

### Build Details
- Trigger: \`${{ github.event_name }}\`
- Commit: \`${{ github.sha }}\`
- Expo Build URL: ${{ steps.eas_build.outputs.build_url }}

### Indus Submission Steps
1. Download the APK from this release.
2. Upload it to the [Indus Appstore Developer Console](https://developer.indusappstore.com).
3. Package Name: \`com.anirudhsinh.binaryconverter\`
4. App Name: Binary Converter
5. Category: Tools/Productivity
6. Privacy Policy: [Link](https://anirudhsinh01.github.io/BinaryConverter/)
7. Submit for review.
EOF
          echo "notes_file=release_notes.md" >> $GITHUB_OUTPUT

      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ steps.get_tag.outputs.tag }}"
          IS_PRERELEASE=false
          if [[ ! "$TAG" =~ ^v[0-9] ]]; then
            IS_PRERELEASE=true
          fi
          gh release create "$TAG" \
            --title "Release $TAG (Indus APK)" \
            --notes-file "${{ steps.release_notes.outputs.notes_file }}" \
            --prerelease "$IS_PRERELEASE" \
            "${{ steps.find_apk.outputs.apk_path }}"
